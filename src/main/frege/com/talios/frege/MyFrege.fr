module com.talios.frege.MyFrege where

import com.talios.frege.Greet

makeGreeting :: Greeting -> String
makeGreeting g = g.salutation.welcome ++ " " ++ g.name ++ ", how are you?"

makeFarewell :: Greeting -> String
makeFarewell g = g.salutation.farewell ++ " " ++ g.name ++ ", it was nice seeing you again!"

testGreeting :: String
testGreeting = makeGreeting $ Greeting "Bob" $ Salutation "Hey there" "See you later"
testFarewell = makeFarewell $ Greeting "Bob" $ Salutation "Hey there" "See you later"

greet :: Greeting -> IO()
greet g = do
 println $ makeGreeting g




-- Billing code from Modularity Patterns

data Bill = Bill {amount :: Double}
data Customer = !Customer {name :: String, emailAddress :: String, bills :: [Bill] }

class Discountable d where
  discountFor :: d -> Double

instance Discountable Customer where
  discountFor c = if length c.bills > 5 then 3.0 else 1.0

main _ = println $ show afield ++ "The calculated discount for " ++ cust.name  ++ " is " ++ show discount
   where cust     = Customer "Mark" "mark@talios.com" [Bill 30.0, Bill 30.0, Bill 30.0, Bill 30.0, Bill 30.0, Bill 30.0]
         discount = discountFor cust
         afield   = StandardField "Mark" "Mark" "String"
